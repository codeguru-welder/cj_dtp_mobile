<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<bean id="Sample.sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocations">
			<list>
				<value>file:${mink.home}/conf/sample/sql-map-sample/sqlMapConfig.xml</value>
			</list>
		</property>
		<property name="mappingLocations">
			<list>
				<value>classpath*:com/mink/connectors/**/*SqlMap.xml</value>
			</list>
		</property>
		<property name="dataSource" ref="mink.db.default"/>
	</bean>

	<bean id="Sample.sqlMapClientTemplate" class="org.springframework.orm.ibatis.SqlMapClientTemplate">
		<property name="sqlMapClient" ref="Sample.sqlMapClient" />
	</bean>
	
	<tx:advice id="Sample.txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!-- all methods starting with 'get' are read-only -->
			<tx:method name="upd*" read-only="false" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="del*" read-only="false" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="ins*" read-only="false" propagation="REQUIRED"
				rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	
	<!-- Transaction manager that delegates to JTA (for a transactional JNDI DataSource) -->
	<!-- Necessary here due to the need for distributed transactions across two databases -->
	<!-- (see dataAccessContext-local.xml for an alternative) -->
	<aop:config>
		<aop:pointcut id="Sample.txPointcut" expression="execution(* *..mink.connectors..*Service.*(..))" />
		<aop:advisor advice-ref="Sample.txAdvice" pointcut-ref="Sample.txPointcut" />
	</aop:config>
	
</beans>
